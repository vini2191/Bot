# Lamorim das Promo√ß√µes - Bot de Alertas

ü§ñ Este √© um bot Telegram que envia alertas personalizados para usu√°rios com base em palavras-chave cadastradas. O bot monitora um canal espec√≠fico e, quando encontra palavras cadastradas pelos usu√°rios, envia o link do post e encaminha a mensagem original.

---

## Funcionalidades

- ‚úÖ Cadastrar palavras-chave com `/add palavra`.
- üìã Listar suas palavras-chave com `/lista`.
- üóë Apagar uma palavra espec√≠fica com `/apagar palavra`.
- üò± Apagar todas as palavras com `/apagartudo`.
- ‚òï Mensagem de doa√ß√£o com `/doar`.
- üì¢ Envio de alertas quando uma palavra-chave √© encontrada em uma postagem do canal.
- üì§ Encaminha a mensagem original do canal antes do alerta.
- Mensagem especial para a palavra-chave `cupom shopee`.

---

## Requisitos

- Python 3.10 ou superior
- Bibliotecas necess√°rias:

```txt
telepot>=12.7
python-telegram-bot>=20.0
openai>=1.29.0
tweepy>=4.25.0
Instala√ß√£o
Clone este reposit√≥rio:

bash
Copiar c√≥digo
git clone https://github.com/seuusuario/lamorim-promocoes-bot.git
cd lamorim-promocoes-bot
Crie um ambiente virtual (opcional, mas recomendado):

bash
Copiar c√≥digo
python -m venv venv
source venv/bin/activate  # Linux / macOS
venv\Scripts\activate     # Windows
Instale as depend√™ncias:

bash
Copiar c√≥digo
pip install -r requirements.txt
Configura√ß√£o
Crie um arquivo .telegram_bot_secret na raiz do projeto com as seguintes vari√°veis:

ini
Copiar c√≥digo
TELEGRAM_BOT_TOKEN=seu_token_aqui
TELEGRAM_CHANNEL_ID=-1001234567890
TELEGRAM_CHANNEL_USERNAME=nomedoseucanal
TELEGRAM_BOT_TOKEN: Token do seu bot no Telegram.

TELEGRAM_CHANNEL_ID: ID num√©rico do canal a ser monitorado (ex: -1001234567890).

TELEGRAM_CHANNEL_USERNAME: Nome p√∫blico do canal (ex: lamorimpromos).

Certifique-se de que o bot tem permiss√£o para ler mensagens do canal.

Uso
Execute o bot:

bash
Copiar c√≥digo
python app.py
No Telegram, envie /start para iniciar.

Adicione palavras-chave com /add palavra.

Quando o canal postar algo com suas palavras, voc√™ receber√°:

A mensagem original encaminhada.

Um alerta com a palavra-chave e link do post.

Estrutura do Projeto
bash
Copiar c√≥digo
lamorim-promocoes-bot/
‚îú‚îÄ‚îÄ app.py                    # C√≥digo principal do bot
‚îú‚îÄ‚îÄ dados_palavras.json       # Armazena palavras-chave dos usu√°rios
‚îú‚îÄ‚îÄ .telegram_bot_secret      # Segredos do bot (n√£o versionar)
‚îú‚îÄ‚îÄ requirements.txt          # Depend√™ncias do projeto
‚îî‚îÄ‚îÄ README.md                 # Este arquivo
Contribui√ß√£o
Fork este reposit√≥rio.

Crie sua branch: git checkout -b minha-nova-funcionalidade.

Commit suas altera√ß√µes: git commit -m "Minha nova funcionalidade".

Push para a branch: git push origin minha-nova-funcionalidade.

Abra um Pull Request.

Licen√ßa
Este projeto √© aberto e pode ser usado e modificado livremente.

üí° Dica: Para melhorar desempenho e tempo de resposta, √© recomendado migrar para a vers√£o python-telegram-bot com async, evitando o uso do loop getUpdates.

yaml
Copiar c√≥digo

---

Se voc√™ quiser, posso tamb√©m criar **uma vers√£o mais visual e resumida**, com imagens, badges e instru√ß√µes r√°pidas, para deixar o README **mais profissional e atraente** para o GitHub.  

Quer que eu fa√ßa isso?






